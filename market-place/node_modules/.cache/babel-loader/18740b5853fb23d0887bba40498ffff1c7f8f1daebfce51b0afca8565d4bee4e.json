{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/Claire /HYPERISLAND/React/Group project/SPA-group-3/market-place/src/components/Location.js\",\n  _s2 = $RefreshSig$();\nimport Countries from '../Data/countries.json';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Location = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [country, setCountry] = useState(null);\n  _s(navigator.geolocation.getCurrentPosition(_s(position => {\n    _s();\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    let API_key1 = \"ba809da45bb1b9acdbe937e8ceaaf610\";\n    useEffect(() => {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_key1}`).then(res => res.json()).then(data => setCountry(Countries[data.sys.country]));\n    }, []);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Location : \", country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s2(Location, \"w91/yYgqInJOBExXoq2z2NGnt2c=\");\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["Countries","useEffect","useState","Location","country","setCountry","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","API_key1","fetch","then","res","json","data","sys"],"sources":["/Users/claire/Documents/Claire /HYPERISLAND/React/Group project/SPA-group-3/market-place/src/components/Location.js"],"sourcesContent":["import Countries from '../Data/countries.json';\nimport { useEffect, useState } from 'react';\n\nconst Location = () => {\n    const [country, setCountry] = useState(null);\n\n    navigator.geolocation.getCurrentPosition(position => {\n        let lat = position.coords.latitude;\n        let lon = position.coords.longitude;\n\n        let API_key1 = \"ba809da45bb1b9acdbe937e8ceaaf610\";\n\n        useEffect(() => {\n            fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_key1}`)\n                .then(res => res.json())\n                .then(data => setCountry(Countries[data.sys.country]));\n        }, [])\n    });\n\n    return (\n        <div>\n            <span>Location : {country}</span>\n        </div>\n    )\n}\n\nexport default Location;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EAE5C,GAAAI,SAAS,CAACC,WAAW,CAACC,kBAAkB,IAACC,QAAQ,IAAI;IAAA;IACjD,IAAIC,GAAG,GAAGD,QAAQ,CAACE,MAAM,CAACC,QAAQ;IAClC,IAAIC,GAAG,GAAGJ,QAAQ,CAACE,MAAM,CAACG,SAAS;IAEnC,IAAIC,QAAQ,GAAG,kCAAkC;IAEjDd,SAAS,CAAC,MAAM;MACZe,KAAK,CAAE,uDAAsDN,GAAI,QAAOG,GAAI,UAASE,QAAS,EAAC,CAAC,CAC3FE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIf,UAAU,CAACL,SAAS,CAACoB,IAAI,CAACC,GAAG,CAACjB,OAAO,CAAC,CAAC,CAAC;IAC9D,CAAC,EAAE,EAAE,CAAC;EACV,CAAC,kCAAC;EAEF,oBACI;IAAA,uBACI;MAAA,WAAM,aAAW,EAACA,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EAAQ;IAAA;IAAA;IAAA;EAAA,QAC/B;AAEd,CAAC;AAAA,IArBKD,QAAQ;AAAA,KAARA,QAAQ;AAuBd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}